generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  clerkId        String     @unique
  email          String     @unique
  role           UserRole   @default(USER)
  status         UserStatus @default(PENDING)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  firstName      String?
  lastName       String?
  artistProfiles Artist[]   @relation("UserToArtist")
  createdEvents  Event[]    @relation("CreatedBy")
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  time        String
  location    String
  price       Float?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  genre       String
  isActive    Boolean     @default(true)
  artistId    String?
  slug        String      @unique
  createdById String?
  deletedAt   DateTime?
  isDeleted   Boolean     @default(false)
  organizer   String
  artist      Artist?     @relation(fields: [artistId], references: [id])
  createdBy   User?       @relation("CreatedBy", fields: [createdById], references: [id])
  dates       EventDate[]
  images      Image[]
}

model EventDate {
  id      String   @id @default(cuid())
  date    DateTime
  eventId String
  event   Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Artist {
  id             String   @id @default(cuid())
  name           String
  genres         String[]
  bio            String
  origin         String
  socialMedia    Json?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  slug           String   @unique
  userId         String?
  profileImageId String?
  user           User?    @relation("UserToArtist", fields: [userId], references: [id])
  events         Event[]
  images         Image[]
}

model Image {
  id        String   @id @default(cuid())
  url       String
  alt       String
  eventId   String?
  artistId  String?
  createdAt DateTime @default(now())
  public_id String?
  artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: Cascade)
  event     Event?   @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

enum UserRole {
  USER
  ARTIST
  ADMIN
}

enum UserStatus {
  PENDING
  ACTIVE
  BLOCKED
}
